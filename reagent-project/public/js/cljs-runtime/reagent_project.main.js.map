{"version":3,"sources":["reagent_project/main.cljs"],"mappings":";;;;;AAOA,AAAA,AAAMA;AAAN,AAEE,AAAA,AAACC,AAAQC,AAAoB,AAAA,AAACC;;AAGhC,AAAA,AACEC;AADF,AAIE,AAAA,AAACC;;AACD,AAACL;;AAGH,AAAA,AAAMM;AAAN,AAEE,AAACN","names":["reagent-project.main/do-render","reagent.core.render.cljs$core$IFn$_invoke$arity$2","reagent-project.view.app/relative-state-app","reagent-project.interop/get-element-by-id!","reagent-project.main/reload","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","reagent-project.main/main!"],"sourcesContent":["(ns reagent-project.main\n  (:require\n    [reagent.core :refer [render]]\n    [reagent-project.view.app :refer [relative-state-app]]\n    [reagent-project.interop :refer [get-element-by-id!]]\n    ))\n\n(defn do-render\n  []\n  (render [relative-state-app] (get-element-by-id! \"app\")))      ; render the component in the app element\n\n; Shadow-cljs dev-stuff...probably\n(defn\n  reload\n  {:dev/after-load true}\n  []\n  (println \"Dev Reload\")\n  (do-render))\n\n; Entry point\n(defn main!\n  []\n  (do-render))\n"]}