["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.printing');\ngoog.require('cljs.core');\ngoog.require('devtools.prefs');\ngoog.require('devtools.format');\ngoog.require('devtools.protocols');\ngoog.require('devtools.formatters.state');\ngoog.require('devtools.formatters.helpers');\ndevtools.formatters.printing.markup_QMARK_ = (function devtools$formatters$printing$markup_QMARK_(value){\nreturn new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(value));\n});\ndevtools.formatters.printing.mark_as_markup = (function devtools$formatters$printing$mark_as_markup(value){\nreturn cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186),true], null));\n});\ndevtools.formatters.printing.build_markup = (function devtools$formatters$printing$build_markup(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___40619 = arguments.length;\nvar i__4731__auto___40620 = (0);\nwhile(true){\nif((i__4731__auto___40620 < len__4730__auto___40619)){\nargs__4736__auto__.push((arguments[i__4731__auto___40620]));\n\nvar G__40621 = (i__4731__auto___40620 + (1));\ni__4731__auto___40620 = G__40621;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic = (function (markup_db,fn_key,args){\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(markup_db,fn_key);\nif(cljs.core.truth_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"missing markup method in markup-db: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_key)].join(''),\"\\n\",\"f\"].join('')));\n}\n\nreturn devtools.formatters.printing.mark_as_markup(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args));\n});\n\ndevtools.formatters.printing.build_markup.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ndevtools.formatters.printing.build_markup.cljs$lang$applyTo = (function (seq40529){\nvar G__40530 = cljs.core.first(seq40529);\nvar seq40529__$1 = cljs.core.next(seq40529);\nvar G__40531 = cljs.core.first(seq40529__$1);\nvar seq40529__$2 = cljs.core.next(seq40529__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__40530,G__40531,seq40529__$2);\n});\n\ndevtools.formatters.printing.wrap_value_as_reference_if_needed = (function devtools$formatters$printing$wrap_value_as_reference_if_needed(markup_db,value){\nif(cljs.core.truth_((function (){var or__4131__auto__ = devtools.formatters.helpers.directly_printable_QMARK_(value);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nreturn devtools.formatters.printing.markup_QMARK_(value);\n}\n})())){\nreturn value;\n} else {\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0));\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n*/\ndevtools.formatters.printing.TemplateWriter = (function (group,markup_db){\nthis.group = group;\nthis.markup_db = markup_db;\nthis.cljs$lang$protocol_mask$partition0$ = 1073741824;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\ndevtools.formatters.printing.TemplateWriter.prototype.merge = (function (a){\nvar self__ = this;\nvar _ = this;\nreturn self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,a);\n});\n\ndevtools.formatters.printing.TemplateWriter.prototype.get_group = (function (){\nvar self__ = this;\nvar _ = this;\nreturn self__.group;\n});\n\ndevtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,o){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.wrap_value_as_reference_if_needed(self__.markup_db,o)], null));\n});\n\ndevtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn null;\n});\n\ndevtools.formatters.printing.TemplateWriter.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"group\",\"group\",-2071839637,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"markup-db\",\"markup-db\",-1841597035,null)], null);\n});\n\ndevtools.formatters.printing.TemplateWriter.cljs$lang$type = true;\n\ndevtools.formatters.printing.TemplateWriter.cljs$lang$ctorStr = \"devtools.formatters.printing/TemplateWriter\";\n\ndevtools.formatters.printing.TemplateWriter.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"devtools.formatters.printing/TemplateWriter\");\n});\n\n/**\n * Positional factory function for devtools.formatters.printing/TemplateWriter.\n */\ndevtools.formatters.printing.__GT_TemplateWriter = (function devtools$formatters$printing$__GT_TemplateWriter(group,markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(group,markup_db));\n});\n\ndevtools.formatters.printing.make_template_writer = (function devtools$formatters$printing$make_template_writer(markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(cljs.core.PersistentVector.EMPTY,markup_db));\n});\ndevtools.formatters.printing.already_reference_QMARK_ = (function devtools$formatters$printing$already_reference_QMARK_(group){\nvar temp__5718__auto__ = cljs.core.first(cljs.core.first(group));\nif(cljs.core.truth_(temp__5718__auto__)){\nvar tag = temp__5718__auto__;\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tag,\"reference\");\n} else {\nreturn null;\n}\n});\ndevtools.formatters.printing.wrap_group_in_reference_if_needed = (function devtools$formatters$printing$wrap_group_in_reference_if_needed(group,obj,markup_db){\nif(cljs.core.truth_((function (){var and__4120__auto__ = cljs.core.not(devtools.formatters.printing.already_reference_QMARK_(group));\nif(and__4120__auto__){\nvar or__4131__auto__ = devtools.formatters.helpers.expandable_QMARK_(obj);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn devtools.formatters.helpers.abbreviated_QMARK_(group);\n}\n} else {\nreturn and__4120__auto__;\n}\n})())){\nvar expandable_markup = cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),group);\nvar surrogate_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,expandable_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0));\nvar reference_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([surrogate_markup], 0));\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [reference_markup], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_circular_warning_if_needed = (function devtools$formatters$printing$wrap_group_in_circular_warning_if_needed(group,markup_db,circular_QMARK_){\nif(cljs.core.truth_(circular_QMARK_)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_meta_if_needed = (function devtools$formatters$printing$wrap_group_in_meta_if_needed(group,value,markup_db){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-metas\",\"render-metas\",1141294116),value,(function (p1__40565_SHARP_){\nreturn (!((cljs.core.meta(p1__40565_SHARP_) == null)));\n})))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587).cljs$core$IFn$_invoke$arity$1(markup_db),cljs.core.meta(value)),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.detect_edge_case_and_patch_it = (function devtools$formatters$printing$detect_edge_case_and_patch_it(group,obj,markup_db){\nif(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"\\\"]\")))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"]\")))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\"]\")))))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0))], null);\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#<\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(1)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\">\")))){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),devtools.formatters.printing.build_markup(new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2))], null);\n} else {\nreturn group;\n\n}\n}\n});\ndevtools.formatters.printing.post_process_printed_output = (function devtools$formatters$printing$post_process_printed_output(output_group,obj,markup_db,circular_QMARK_){\nreturn devtools.formatters.printing.wrap_group_in_meta_if_needed(devtools.formatters.printing.wrap_group_in_circular_warning_if_needed(devtools.formatters.printing.wrap_group_in_reference_if_needed(devtools.formatters.printing.detect_edge_case_and_patch_it(output_group,obj,markup_db),obj,markup_db),markup_db,circular_QMARK_),obj,markup_db);\n});\ndevtools.formatters.printing.alt_printer_job = (function devtools$formatters$printing$alt_printer_job(obj,writer,opts){\nvar map__40573 = opts;\nvar map__40573__$1 = (((((!((map__40573 == null))))?(((((map__40573.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40573.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40573):map__40573);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40573__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nif(cljs.core.truth_((function (){var or__4131__auto__ = (function (){try{if((!((obj == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n}\n}catch (e40577){var _e__39477__auto__ = e40577;\nreturn false;\n}})();\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\ntry{if((!((obj == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n}\n}catch (e40585){var _e__39477__auto__ = e40585;\nreturn false;\n}}\n})())){\nreturn cljs.core._write(writer,devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));\n} else {\nvar temp__5718__auto__ = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0));\nif(cljs.core.truth_(temp__5718__auto__)){\nvar atomic_markup = temp__5718__auto__;\nreturn cljs.core._write(writer,atomic_markup);\n} else {\nvar default_impl = new cljs.core.Keyword(null,\"fallback-impl\",\"fallback-impl\",-1501286995).cljs$core$IFn$_invoke$arity$1(opts);\nvar inner_opts = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_print_level_STAR_,(1)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),(0)):opts);\nreturn (default_impl.cljs$core$IFn$_invoke$arity$3 ? default_impl.cljs$core$IFn$_invoke$arity$3(obj,writer,inner_opts) : default_impl.call(null,obj,writer,inner_opts));\n}\n}\n});\ndevtools.formatters.printing.alt_printer_impl = (function devtools$formatters$printing$alt_printer_impl(obj,writer,opts){\nvar _STAR_current_state_STAR__orig_val__40590 = devtools.formatters.state._STAR_current_state_STAR_;\nvar _STAR_current_state_STAR__temp_val__40591 = devtools.formatters.state.get_current_state();\ndevtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR__temp_val__40591;\n\ntry{var map__40592 = opts;\nvar map__40592__$1 = (((((!((map__40592 == null))))?(((((map__40592.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__40592.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__40592):map__40592);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__40592__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nvar circular_QMARK_ = devtools.formatters.state.is_circular_QMARK_(obj);\nvar inner_writer = devtools.formatters.printing.make_template_writer(new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734).cljs$core$IFn$_invoke$arity$1(opts));\ndevtools.formatters.state.push_object_to_current_history_BANG_(obj);\n\ndevtools.formatters.printing.alt_printer_job(obj,inner_writer,opts);\n\nreturn writer.merge(devtools.formatters.printing.post_process_printed_output(inner_writer.get_group(),obj,markup_db,circular_QMARK_));\n}finally {devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR__orig_val__40590;\n}});\ndevtools.formatters.printing.managed_print = (function devtools$formatters$printing$managed_print(tag,markup_db,printer){\nvar writer = devtools.formatters.printing.make_template_writer(markup_db);\nvar opts = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"alt-impl\",\"alt-impl\",670969595),devtools.formatters.printing.alt_printer_impl,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734),markup_db,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),devtools.prefs.pref(new cljs.core.Keyword(null,\"max-header-elements\",\"max-header-elements\",713629864)),new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935),devtools.prefs.pref(new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935))], null);\nvar job_fn = ((function (writer,opts){\nreturn (function (){\nreturn (printer.cljs$core$IFn$_invoke$arity$2 ? printer.cljs$core$IFn$_invoke$arity$2(writer,opts) : printer.call(null,writer,opts));\n});})(writer,opts))\n;\nvar temp__5718__auto___40639 = devtools.formatters.state.get_managed_print_level();\nif(cljs.core.truth_(temp__5718__auto___40639)){\nvar managed_print_level_40640 = temp__5718__auto___40639;\nvar _STAR_print_level_STAR__orig_val__40597_40641 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__40598_40642 = managed_print_level_40640;\ncljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__40598_40642;\n\ntry{devtools.formatters.state.update_current_state_BANG_(((function (_STAR_print_level_STAR__orig_val__40597_40641,_STAR_print_level_STAR__temp_val__40598_40642,managed_print_level_40640,temp__5718__auto___40639,writer,opts,job_fn){\nreturn (function (p1__40594_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__40594_SHARP_,null);\n});})(_STAR_print_level_STAR__orig_val__40597_40641,_STAR_print_level_STAR__temp_val__40598_40642,managed_print_level_40640,temp__5718__auto___40639,writer,opts,job_fn))\n);\n\njob_fn();\n}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__40597_40641;\n}} else {\njob_fn();\n}\n\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.prefs.pref(tag)], null),writer.get_group());\n});\ndevtools.formatters.printing.managed_print_via_writer = (function devtools$formatters$printing$managed_print_via_writer(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core.pr_seq_writer(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null),writer,opts);\n}));\n});\ndevtools.formatters.printing.managed_print_via_protocol = (function devtools$formatters$printing$managed_print_via_protocol(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core._pr_writer(value,writer,opts);\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/printing.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",33],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$safe-call","~$devtools.oops"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.printing","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.prefs","^M","~$devtools.format","^N","~$devtools.protocols","^O","~$devtools.formatters.state","^P","~$devtools.formatters.helpers","^Q","~$cljs.core","^R","~$goog","^S"],"~:seen",["^F",["~:require","~:require-macros"]],"~:uses",["^ ","~$IGroup","^O","~$expandable?","^Q","~$ITemplate","^O","~$IDevtoolsFormat","^N","~$get-managed-print-level","^P","~$get-current-state","^P","~$ISurrogate","^O","~$should-render?","^Q","~$set-managed-print-level","^P","~$directly-printable?","^Q","~$pref","^M","~$push-object-to-current-history!","^P","~$update-current-state!","^P","~$abbreviated?","^Q","~$IFormat","^O","~$*current-state*","^P","~$cljs-value?","^Q","~$is-circular?","^P"],"^V",["^ ","^D","^D","^R","^R","^M","^M"],"~:form",["~#list",["~$ns","^H",["^1?",["^V",["^D","~:refer",["^C"]]]],["^1?",["^U",["^M","^1A",["^16"]],["^N","^1A",["^["]],["^O","^1A",["^Z","^X","^12","^1:"]],["^P","^1A",["^17","^1;","^11","^1=","^10","^14","^18"]],["^Q","^1A",["^1<","^Y","^19","^15","^13"]]]]]],"~:flags",["^ ","^V",["^F",[]],"^U",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^M","^N","^O","^P","^Q"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/printing.cljs"],"~:compiled-at",1584818286006,"~:resource-name","devtools/formatters/printing.cljs","~:warnings",[],"~:source","(ns devtools.formatters.printing\n  (:require-macros [devtools.oops :refer [safe-call]])\n  (:require [devtools.prefs :refer [pref]]\n            [devtools.format :refer [IDevtoolsFormat]]\n            [devtools.protocols :refer [ITemplate IGroup ISurrogate IFormat]]\n            [devtools.formatters.state :refer [push-object-to-current-history! *current-state* get-current-state\n                                               is-circular? get-managed-print-level set-managed-print-level\n                                               update-current-state!]]\n            [devtools.formatters.helpers :refer [cljs-value? expandable? abbreviated? directly-printable? should-render?]]))\n\n; -- helpers ----------------------------------------------------------------------------------------------------------------\n\n(defn markup? [value]\n  (::markup (meta value)))\n\n(defn mark-as-markup [value]\n  (with-meta value {::markup true}))\n\n(defn build-markup [markup-db fn-key & args]\n  (let [f (get markup-db fn-key)]\n    (assert f (str \"missing markup method in markup-db: \" fn-key))\n    (mark-as-markup (apply f args))))\n\n(defn wrap-value-as-reference-if-needed [markup-db value]\n  (if (or (directly-printable? value) (markup? value))\n    value\n    (build-markup markup-db :reference-surrogate value)))\n\n; -- TemplateWriter ---------------------------------------------------------------------------------------------------------\n\n(deftype TemplateWriter [^:mutable group markup-db]\n  Object\n  (merge [_ a] (set! group (concat group a)))\n  (get-group [_] group)\n  IWriter\n  (-write [_ o] (set! group (concat group [(wrap-value-as-reference-if-needed markup-db o)])))                                ; issue #21\n  (-flush [_] nil))\n\n(defn make-template-writer [markup-db]\n  (TemplateWriter. [] markup-db))\n\n; -- post-processing --------------------------------------------------------------------------------------------------------\n\n(defn already-reference? [group]\n  (if-let [tag (first (first group))]\n    (= tag \"reference\")))\n\n(defn wrap-group-in-reference-if-needed [group obj markup-db]\n  (if (and (not (already-reference? group))\n           (or (expandable? obj) (abbreviated? group)))\n    (let [expandable-markup (apply build-markup markup-db :expandable group)\n          surrogate-markup (build-markup markup-db :raw-surrogate obj expandable-markup :target)\n          reference-markup (build-markup markup-db :reference surrogate-markup)]\n      [reference-markup])\n    group))\n\n(defn wrap-group-in-circular-warning-if-needed [group markup-db circular?]\n  (if circular?\n    [(apply build-markup markup-db :circular-reference group)]\n    group))\n\n(defn wrap-group-in-meta-if-needed [group value markup-db]\n  (if (should-render? :render-metas value #(some? (meta %)))\n    [(apply (partial (:meta-wrapper markup-db) (meta value)) group)]\n    group))\n\n; default printer implementation can do this:\n;   :else (write-all writer \"#<\" (str obj) \">\")\n; we want to wrap stringified obj in a reference for further inspection\n;\n; this behaviour changed in https://github.com/clojure/clojurescript/commit/34c3b8985ed8197d90f441c46d168c4024a20eb8\n; newly functions and :else branch print \"#object [\" ... \"]\"\n;\n; in some situations obj can still be a clojurescript value (e.g. deftypes)\n; we have to implement a special flag to prevent infinite recursion\n; see https://github.com/binaryage/cljs-devtools/issues/2\n;     https://github.com/binaryage/cljs-devtools/issues/8\n(defn detect-edge-case-and-patch-it [group obj markup-db]\n  (cond\n    (or\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"\\\"]\"))                                          ; function case\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"]\"))                                            ; :else -constructor case\n      (and (= (count group) 3) (= (nth group 0) \"#object[\") (= (nth group 2) \"]\")))                                           ; :else -cljs$lang$ctorStr case\n    [(build-markup markup-db :native-reference obj)]\n\n    (and (= (count group) 3) (= (nth group 0) \"#<\") (= (str obj) (nth group 1)) (= (nth group 2) \">\"))                        ; old code prior r1.7.28\n    [(nth group 0) (build-markup :native-reference obj) (nth group 2)]\n\n    :else group))\n\n(defn post-process-printed-output [output-group obj markup-db circular?]\n  (-> output-group\n      (detect-edge-case-and-patch-it obj markup-db)                                                                           ; an ugly hack\n      (wrap-group-in-reference-if-needed obj markup-db)\n      (wrap-group-in-circular-warning-if-needed markup-db circular?)\n      (wrap-group-in-meta-if-needed obj markup-db)))\n\n; -- alternative printer ----------------------------------------------------------------------------------------------------\n\n(defn alt-printer-job [obj writer opts]\n  (let [{:keys [markup-db]} opts]\n    (if (or (safe-call satisfies? false IDevtoolsFormat obj)\n            (safe-call satisfies? false IFormat obj))                                                                         ; we have to wrap value in reference if detected IFormat\n      (-write writer (build-markup markup-db :reference obj))\n      (if-let [atomic-markup (build-markup markup-db :atomic obj)]\n        (-write writer atomic-markup)\n        (let [default-impl (:fallback-impl opts)\n              ; we want to limit print-level, at max-print-level level use maximal abbreviation e.g. [...] or {...}\n              inner-opts (if (= *print-level* 1) (assoc opts :print-length 0) opts)]\n          (default-impl obj writer inner-opts))))))\n\n(defn alt-printer-impl [obj writer opts]\n  (binding [*current-state* (get-current-state)]\n    (let [{:keys [markup-db]} opts\n          circular? (is-circular? obj)\n          inner-writer (make-template-writer (:markup-db opts))]\n      (push-object-to-current-history! obj)\n      (alt-printer-job obj inner-writer opts)\n      (.merge writer (post-process-printed-output (.get-group inner-writer) obj markup-db circular?)))))\n\n; -- common code for managed printing ---------------------------------------------------------------------------------------\n\n(defn managed-print [tag markup-db printer]\n  (let [writer (make-template-writer markup-db)\n        opts {:alt-impl     alt-printer-impl\n              :markup-db    markup-db\n              :print-length (pref :max-header-elements)\n              :more-marker  (pref :more-marker)}\n        job-fn #(printer writer opts)]\n    (if-let [managed-print-level (get-managed-print-level)]\n      (binding [*print-level* managed-print-level]\n        (update-current-state! #(set-managed-print-level % nil))                                                              ; reset managed-print-level so it does not propagate further down in expaded data\n        (job-fn))\n      (job-fn))\n    (concat [(pref tag)] (.get-group writer))))\n\n; -- public printing API ----------------------------------------------------------------------------------------------------\n\n(defn managed-print-via-writer [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (pr-seq-writer [value] writer opts))))                                                       ; note we use pr-seq-writer becasue pr-writer is private for some reason\n\n(defn managed-print-via-protocol [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (-pr-writer value writer opts))))\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["devtools.formatters.printing/markup?","value","cljs.core/meta","devtools.formatters.printing/mark-as-markup","cljs.core/with-meta","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","devtools.formatters.printing/build-markup","seq40529","G__40530","cljs.core/first","cljs.core/next","G__40531","self__4717__auto__","markup-db","fn-key","args","f","cljs.core.get.cljs$core$IFn$_invoke$arity$2","js/Error","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","devtools.formatters.printing/wrap-value-as-reference-if-needed","or__4131__auto__","devtools.formatters.helpers/directly-printable?","devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic","this__4374__auto__","writer__4375__auto__","opt__4376__auto__","cljs.core/-write","devtools.formatters.printing/TemplateWriter","devtools.formatters.printing/->TemplateWriter","group","_","a","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","o","devtools.formatters.printing/make-template-writer","devtools.formatters.printing/already-reference?","temp__5718__auto__","tag","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","devtools.formatters.printing/wrap-group-in-reference-if-needed","obj","and__4120__auto__","cljs.core/not","devtools.formatters.helpers/expandable?","devtools.formatters.helpers/abbreviated?","expandable-markup","cljs.core.apply.cljs$core$IFn$_invoke$arity$4","surrogate-markup","reference-markup","devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","circular?","devtools.formatters.printing/wrap-group-in-meta-if-needed","p1__40565#","devtools.formatters.helpers/should-render?","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","devtools.formatters.printing/detect-edge-case-and-patch-it","cljs.core/count","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","devtools.formatters.printing/post-process-printed-output","output-group","devtools.formatters.printing/alt-printer-job","writer","opts","map__40573","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core/native-satisfies?","_e__39477__auto__","e40577","devtools.format/IDevtoolsFormat","e40585","devtools.protocols/IFormat","atomic-markup","default-impl","inner-opts","cljs.core/*print-level*","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","devtools.formatters.printing/alt-printer-impl","*current-state*-orig-val__40590","*current-state*-temp-val__40591","devtools.formatters.state/*current-state*","devtools.formatters.state/get-current-state","map__40592","devtools.formatters.state/is-circular?","inner-writer","devtools.formatters.state/push-object-to-current-history!","devtools.formatters.printing/managed-print","printer","devtools.prefs/pref","job-fn","managed-print-level","devtools.formatters.state/get-managed-print-level","*print-level*-orig-val__40597","*print-level*-temp-val__40598","p1__40594#","devtools.formatters.state/update-current-state!","devtools.formatters.state/set-managed-print-level","devtools.formatters.printing/managed-print-via-writer","cljs.core/pr-seq-writer","devtools.formatters.printing/managed-print-via-protocol","cljs.core/-pr-writer"]]],"~:cache-keys",["~#cmap",[["~:macro","~$devtools.defaults"],[1584818247000],["^1F","devtools/formatters/printing.cljs"],[1584818247246,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^S","^R","^M","^N","^O","^P","^Q"]]],["^1S","^R"],[1584816509000],["^1F","devtools/formatters/helpers.cljs"],[1584818247246,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^R","^M","~$devtools.munging","^N","^O"]]],["^1F","goog/math/math.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","~$goog.array","~$goog.asserts"]]],["^1F","goog/array/array.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^1["]]],["^1F","goog/debug/error.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S"]]],["^1F","goog/dom/nodetype.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S"]]],["^1F","goog/object/object.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S"]]],"~:SHADOW-TIMESTAMP",[1584816509000,1584816509000],["^1F","goog/math/long.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^1[","~$goog.reflect"]]],["^1F","goog/string/internal.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S"]]],["^1F","goog/functions/functions.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S"]]],["^1F","devtools/prefs.cljs"],[1584818247246,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^R","^1T"]]],["^1F","goog/structs/map.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1S","^D"],[1584818247000],["^1F","devtools/munging.cljs"],[1584818247246,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^R","~$clojure.string","~$devtools.context","~$goog.object","~$goog.string.StringBuffer"]]],["^1F","goog/asserts/asserts.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1F","goog/uri/uri.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^1Z","^1[","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1F","goog/base.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",[]]],["^1F","goog/structs/structs.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^1Z","^26"]]],["^1F","clojure/string.cljs"],[1584816509580,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^R","^2:","^27"]]],["^1F","devtools/formatters/state.cljs"],[1584818247246,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^R"]]],["^1F","goog/string/string.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","~$goog.string.internal"]]],["^1S","^1Y"],[1584818247000],["^1F","goog/reflect/reflect.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S"]]],["^1F","goog/string/stringbuffer.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S"]]],["^1F","goog/iter/iter.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^1Z","^1[","~$goog.functions","~$goog.math"]]],["^1F","devtools/defaults.cljs"],[1584818247246,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^R"]]],["^1S","^M"],[1584818247000],["^1F","cljs/core.cljs"],[1584816509580,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["~$goog.math.Long","~$goog.math.Integer","^2:","^26","^1Z","~$goog.Uri","^27"]]],["^1F","devtools/context.cljs"],[1584818247246,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^R"]]],["^1F","goog/math/integer.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S"]]],["^1F","devtools/format.cljs"],[1584818247246,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^R","^25"]]],["^1F","goog/uri/utils.js"],[1584816508062,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^1Z","^1[","^2:"]]],["^1F","devtools/protocols.cljs"],[1584818247246,"^1U",["^ ","^1V",null,"^1W",["^F",[]],"^1X",["^S","^R"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",1,"^8",5,"^9",1,"^:",33],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",["^ ","^C","^D"],"^E",["^F",[]],"~:shadow/js-access-properties",["^F",["get-group","merge"]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S"],"^T",["^F",["^U","^V"]],"~:shadow/js-access-global",["^F",["Error"]],"^W",["^ ","^X","^O","^Y","^Q","^Z","^O","^[","^N","^10","^P","^11","^P","^12","^O","^13","^Q","^14","^P","^15","^Q","^16","^M","^17","^P","^18","^P","^19","^Q","^1:","^O","^1;","^P","^1<","^Q","^1=","^P"],"~:defs",["^ ","~$->TemplateWriter",["^ ","~:protocol-inline",null,"^5",["^ ","~:protocols",["^F",["~$cljs.core/IWriter","~$cljs.core/Object"]],"^6","devtools/formatters/printing.cljs","^:",24,"^8",10,"~:factory","~:positional","^7",31,"^9",31,"~:arglists",["^1?",["~$quote",["^1?",[["~$group","~$markup-db"]]]]],"~:skip-protocol-flag",["^F",["^2M"]],"~:doc","Positional factory function for devtools.formatters.printing/TemplateWriter."],"^2L",["^F",["^2M","^2N"]],"^G","~$devtools.formatters.printing/->TemplateWriter","^6","devtools/formatters/printing.cljs","^:",24,"~:method-params",["^1?",[["^2S","^2T"]]],"~:protocol-impl",null,"~:arglists-meta",["^1?",[null,null]],"^8",1,"~:variadic?",false,"^2O","^2P","^7",31,"~:ret-tag","~$devtools.formatters.printing/TemplateWriter","^9",31,"~:max-fixed-arity",2,"~:fn-var",true,"^2Q",["^1?",["^2R",["^1?",[["^2S","^2T"]]]]],"^2U",["^F",["^2M"]],"^2V","Positional factory function for devtools.formatters.printing/TemplateWriter."],"~$alt-printer-impl",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",112,"^8",7,"^9",112,"^:",23,"^2Q",["^1?",["^2R",["^1?",[["~$obj","~$writer","~$opts"]]]]]],"^G","~$devtools.formatters.printing/alt-printer-impl","^6","devtools/formatters/printing.cljs","^:",23,"^2X",["^1?",[["^35","^36","^37"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",112,"^9",112,"^32",3,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^35","^36","^37"]]]]]],"~$markup?",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",13,"^8",7,"^9",13,"^:",14,"^2Q",["^1?",["^2R",["^1?",[["~$value"]]]]]],"^G","~$devtools.formatters.printing/markup?","^6","devtools/formatters/printing.cljs","^:",14,"^2X",["^1?",[["^3:"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",13,"^30","~$any","^9",13,"^32",1,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^3:"]]]]]],"~$wrap-group-in-meta-if-needed",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",62,"^8",7,"^9",62,"^:",35,"^2Q",["^1?",["^2R",["^1?",[["^2S","^3:","^2T"]]]]]],"^G","~$devtools.formatters.printing/wrap-group-in-meta-if-needed","^6","devtools/formatters/printing.cljs","^:",35,"^2X",["^1?",[["^2S","^3:","^2T"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",62,"^30",["^F",[null,"~$cljs.core/IVector"]],"^9",62,"^32",3,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^2S","^3:","^2T"]]]]]],"~$mark-as-markup",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",16,"^8",7,"^9",16,"^:",21,"^2Q",["^1?",["^2R",["^1?",[["^3:"]]]]]],"^G","~$devtools.formatters.printing/mark-as-markup","^6","devtools/formatters/printing.cljs","^:",21,"^2X",["^1?",[["^3:"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",16,"^30",["^F",["~$clj","~$cljs.core/MetaFn","~$clj-nil"]],"^9",16,"^32",1,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^3:"]]]]]],"~$detect-edge-case-and-patch-it",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",78,"^8",7,"^9",78,"^:",36,"^2Q",["^1?",["^2R",["^1?",[["^2S","^35","^2T"]]]]]],"^G","~$devtools.formatters.printing/detect-edge-case-and-patch-it","^6","devtools/formatters/printing.cljs","^:",36,"^2X",["^1?",[["^2S","^35","^2T"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",78,"^30",["^F",[null,"^3?"]],"^9",78,"^32",3,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^2S","^35","^2T"]]]]]],"~$wrap-group-in-reference-if-needed",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",48,"^8",7,"^9",48,"^:",40,"^2Q",["^1?",["^2R",["^1?",[["^2S","^35","^2T"]]]]]],"^G","~$devtools.formatters.printing/wrap-group-in-reference-if-needed","^6","devtools/formatters/printing.cljs","^:",40,"^2X",["^1?",[["^2S","^35","^2T"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",48,"^30",["^F",[null,"^3?"]],"^9",48,"^32",3,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^2S","^35","^2T"]]]]]],"~$managed-print-via-writer",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",139,"^8",7,"^9",139,"^:",31,"^2Q",["^1?",["^2R",["^1?",[["^3:","~$tag","^2T"]]]]]],"^G","~$devtools.formatters.printing/managed-print-via-writer","^6","devtools/formatters/printing.cljs","^:",31,"^2X",["^1?",[["^3:","^3J","^2T"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",139,"^30","~$cljs.core/LazySeq","^9",139,"^32",3,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^3:","^3J","^2T"]]]]]],"~$already-reference?",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",44,"^8",7,"^9",44,"^:",25,"^2Q",["^1?",["^2R",["^1?",[["^2S"]]]]]],"^G","~$devtools.formatters.printing/already-reference?","^6","devtools/formatters/printing.cljs","^:",25,"^2X",["^1?",[["^2S"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",44,"^30",["^F",["~$boolean","^3D"]],"^9",44,"^32",1,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^2S"]]]]]],"~$TemplateWriter",["^ ","~:num-fields",2,"^2L",["^F",["^2M","^2N"]],"^G","^31","^6","devtools/formatters/printing.cljs","^:",24,"~:type",true,"^8",10,"^7",31,"~:record",false,"^9",31,"~:tag","~$function","^2U",["^F",["^2M"]]],"~$wrap-value-as-reference-if-needed",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",24,"^8",7,"^9",24,"^:",40,"^2Q",["^1?",["^2R",["^1?",[["^2T","^3:"]]]]]],"^G","~$devtools.formatters.printing/wrap-value-as-reference-if-needed","^6","devtools/formatters/printing.cljs","^:",40,"^2X",["^1?",[["^2T","^3:"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",24,"^30",["^F",[null,"^3B","^3C","^3D"]],"^9",24,"^32",2,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^2T","^3:"]]]]]],"~$managed-print-via-protocol",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",143,"^8",7,"^9",143,"^:",33,"^2Q",["^1?",["^2R",["^1?",[["^3:","^3J","^2T"]]]]]],"^G","~$devtools.formatters.printing/managed-print-via-protocol","^6","devtools/formatters/printing.cljs","^:",33,"^2X",["^1?",[["^3:","^3J","^2T"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",143,"^30","^3L","^9",143,"^32",3,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^3:","^3J","^2T"]]]]]],"~$alt-printer-job",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",100,"^8",7,"^9",100,"^:",22,"^2Q",["^1?",["^2R",["^1?",[["^35","^36","^37"]]]]]],"^G","~$devtools.formatters.printing/alt-printer-job","^6","devtools/formatters/printing.cljs","^:",22,"^2X",["^1?",[["^35","^36","^37"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",100,"^30","^3<","^9",100,"^32",3,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^35","^36","^37"]]]]]],"~$make-template-writer",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",39,"^8",7,"^9",39,"^:",27,"^2Q",["^1?",["^2R",["^1?",[["^2T"]]]]]],"^G","~$devtools.formatters.printing/make-template-writer","^6","devtools/formatters/printing.cljs","^:",27,"^2X",["^1?",[["^2T"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",39,"^30","^31","^9",39,"^32",1,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^2T"]]]]]],"~$wrap-group-in-circular-warning-if-needed",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",57,"^8",7,"^9",57,"^:",47,"^2Q",["^1?",["^2R",["^1?",[["^2S","^2T","~$circular?"]]]]]],"^G","~$devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","^6","devtools/formatters/printing.cljs","^:",47,"^2X",["^1?",[["^2S","^2T","^43"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",57,"^30",["^F",[null,"^3?"]],"^9",57,"^32",3,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^2S","^2T","^43"]]]]]],"~$managed-print",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",123,"^8",7,"^9",123,"^:",20,"^2Q",["^1?",["^2R",["^1?",[["^3J","^2T","~$printer"]]]]]],"^G","~$devtools.formatters.printing/managed-print","^6","devtools/formatters/printing.cljs","^:",20,"^2X",["^1?",[["^3J","^2T","^46"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",123,"^30","^3L","^9",123,"^32",3,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^3J","^2T","^46"]]]]]],"~$build-markup",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",19,"^8",7,"^9",19,"^:",19,"^2Q",["^1?",["^2R",["^1?",[["^2T","~$fn-key","~$&","~$args"]]]]],"~:top-fn",["^ ","^2[",true,"~:fixed-arity",2,"^32",2,"^2X",[["^1?",["^2T","^49","^4:"]]],"^2Q",["^1?",[["^2T","^49","~$&","^4:"]]],"^2Z",["^1?",[null]]]],"^G","~$devtools.formatters.printing/build-markup","^6","devtools/formatters/printing.cljs","^:",19,"^4;",["^ ","^2[",true,"^4<",2,"^32",2,"^2X",[["^1?",["^2T","^49","^4:"]]],"^2Q",["^1?",[["^2T","^49","~$&","^4:"]]],"^2Z",["^1?",[null]]],"^2X",[["^1?",["^2T","^49","^4:"]]],"^2Y",null,"^4<",2,"^2Z",["^1?",[null]],"^8",1,"^2[",true,"~:methods",[["^ ","^4<",2,"^2[",true,"^3T",["^F",["^3B","^3C","^3D"]]]],"^7",19,"^30","^3<","^9",19,"^32",2,"^33",true,"^2Q",["^1?",[["^2T","^49","~$&","^4:"]]]],"~$post-process-printed-output",["^ ","^2K",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",91,"^8",7,"^9",91,"^:",34,"^2Q",["^1?",["^2R",["^1?",[["~$output-group","^35","^2T","^43"]]]]]],"^G","~$devtools.formatters.printing/post-process-printed-output","^6","devtools/formatters/printing.cljs","^:",34,"^2X",["^1?",[["^4@","^35","^2T","^43"]]],"^2Y",null,"^2Z",["^1?",[null,null]],"^8",1,"^2[",false,"^7",91,"^30",["^F",[null,"^3?"]],"^9",91,"^32",4,"^33",true,"^2Q",["^1?",["^2R",["^1?",[["^4@","^35","^2T","^43"]]]]]]],"^V",["^ ","^D","^D","^R","^R","^M","^M"],"~:cljs.analyzer/constants",["^ ","^T",["^F",["~:render-metas","~:else","~:max-header-elements","^2S","~:fallback-impl","~:meta-wrapper","~:raw-surrogate","~:native-reference","~:markup-db","~:reference-surrogate","~:more-marker","~:reference","~:print-length","^2T","~:circular-reference","~:expandable","~:target","~:mutable","~:alt-impl","~:atomic","~:devtools.formatters.printing/markup"]],"~:order",["^4U","^4K","^2S","^4R","^2T","^4P","^4H","^4Q","^4M","^4O","^4C","^4G","^4I","^4D","^4J","^4T","^4F","^4N","^4S","^4L","^4E"]],"^1B",["^ ","^V",["^F",[]],"^U",["^F",[]]],"^1C",["^ "],"^1D",["^S","^R","^M","^N","^O","^P","^Q"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1R",[["^4Y","~:static-fns"],true,["^4Y","~:elide-asserts"],false,["^4Y","~:optimize-constants"],null,["^4Y","^1I"],null,["^4Y","~:external-config"],null,["^4Y","~:tooling-config"],null,["^4Y","~:emit-constants"],null,["^4Y","~:load-tests"],null,["^4Y","~:infer-externs"],true,["^4Y","^1K"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4Y","~:fn-invoke-direct"],null,["^4Y","~:source-map"],"/dev/null"]]]