{"version":3,"sources":["re_frame_project/main.cljs"],"mappings":";;;;;;;;AAUA,AAAA,AAAMA;AAAN,AAEE,AAAA,AAACC,AAAQC,AAAkB,AAAA,AAACC;;AAG9B,AAAA,AACEC;AADF,AAIE,AAAA,AAACC;;AACD,AAACL;;AAGH,AAAA,AAAMM;AAAN,AAEE,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;AACD,AAACR","names":["re-frame-project.main/do-render","reagent.core.render.cljs$core$IFn$_invoke$arity$2","re-frame-project.view.app/global-state-app","re-frame-project.interop/get-element-by-id!","re-frame-project.main/reload","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","re-frame-project.main/main!","G__52023","re-frame.core/dispatch-sync"],"sourcesContent":["(ns re-frame-project.main\n  (:require\n   [reagent.core :refer [render]]\n   [re-frame.core :refer [ dispatch-sync]]\n   [re-frame-project.view.app :refer [global-state-app]]\n   [re-frame-project.interop :refer [get-element-by-id!]]\n   [re-frame-project.query]\n   [re-frame-project.event-handlers]\n   ))\n\n(defn do-render\n  []\n  (render [global-state-app] (get-element-by-id! \"app\")))      ; render the component in the app element\n\n; Shadow-cljs dev-stuff...probably\n(defn\n  reload\n  {:dev/after-load true}\n  []\n  (println \"Dev Reload\")\n  (do-render))\n\n; Entry point\n(defn main!\n  []\n  (dispatch-sync [:initialize])\n  (do-render))\n"]}