{"version":3,"sources":["re_frame_project/interop.cljs"],"mappings":";;AAEA,AAAA,AAAMA,AACHC;AADH,AAEE,AAAiBA;;AAEnB,AAAA,AAAMC,AACHC,AAAEC;AADL,AAEE,AAACC,AAAmBF,AAAEC;;AAExB,AAAA,AAAME;AAAN,AACE,AAAWC;;AAEb,AAAA,AAAMC,AACHP;AADH,AAEE,AAAMQ,AAAqB,AAAwBR;AAAnD,AAAA,AAAA,AACQ,AAAOQ;;AAEjB,AAAA,AAAMC,AACHT;AADH,AAEE,AAAQA;;AAEV,AAAA,AAAMU,AACHC;AADH,AAEE,AAACC,AAA2BD;;AAE9B,AAAA,AAAME,AACHC;AADH,AAEE,AAACC,AAA0BD;;AAE7B,AAAA,AAAME,AACHC;AADH,AAEE,AAACC,AAAYD;;AAEf,AAAA,AAAME,AACHnB,AAAQoB;AADX,AAEE,AAAepB,AAAQoB;;AAIzB,AAAA,AAAMC,AACHC;AADH,AAEE,AAAiBA;;AAEnB,AAAA,AAAMC,AACHD;AADH,AAEM,AAAUA,AACV;;AAEN,AAAA,AAAME,AACHF;AADH,AAEM,AAAUA,AACV;;AAEN,AAAA,AAAMG,AACHR;AADH,AAEE,AAACS,AAAaT;;AAKhB,AAAA,AAAMU,AACHC;AADH,AAEE,AAACC,AAAoBD;;AAEvB,AAAA,AAAME,AACHF,AAAKG,AAAUC;AADlB,AAEE,AAACC,AAAuBL,AAAKG,AAAUC;;AAEzC,AAAA,AAAME;AAAN,AAEE,AAACC;;AAEH,AAAA,AAAMC,AACHR;AADH,AAEE,AAACS,AAAgCT;;AAEnC,AAAA,AAAMU,AACHV;AADH,AAEE,AAAYA;;AAEd,AAAA,AAAMW,AACHC;AADH,AAEE,AAASA;;AAEX,AAAA,AAAMC;AAAN,AAEE,AAACC;;AAEH,AAAA,AAAMC;AAAN,AAEE,AAACC;;AAKH,AAAA,AAAMC,AACHC;AADH,AAGO,AAACE,AAAI,AAAK1B;AAAL,AAAaA,AACA;AAFlB,AAACyB,AAAgCD;;AAOxC,AAAA,AAAMG,AACHH;AADH,AAGO,AAACE,AAAI,AAAK1B;AAAL,AAAaA,AACA,AACA;AAHlB,AAACyB,AAAgCD;;AAOxC,AAAA,AAAMI;AAAN,AAGO,AAACF,AAAI,AAAK1B;AAAL,AAAaA,AACA,AACA;AAHlB,AAAA,AAACyB;;AAOR,AAAA,AAAMI;AAAN,AAEE,AAACC,AAAK,AAACF;;AAET,AAAA,AAAMG;AAAN,AAGI,AAAA,AAACJ,AACD,AAACG;;AAGL,AAAA,AAAME;AAAN,AAGI,AAAA,AAACT,AACD,AAACO;;AAGL,AAAA,AAAMG,AACHT;AADH,AAEE,AAACU,AAAQ,AAACX,AAAaC;;AAEzB,AAAA,AAAMW,AACHX;AADH,AAEE,AAAMY,AAAa,AAACN,AAAK,AAACP,AAAaC;AACjClB,AAAK,AAAQ8B;AACbC,AAAW,AAAaD;AACxBE,AAAS,AAAYF;AAH3B,AAIE,AAACF,AAAQ,AAAA,AAAA,AAAA,AAAqB5B,AAAsB+B,AAA0BC","names":["re-frame-project.interop/scroll-into-view!","element","re-frame-project.interop/scroll-to!","x","y","js/window.scrollTo","re-frame-project.interop/scroll-y!","js/window","re-frame-project.interop/get-bounding-client-rect!","bounding-client-rect","re-frame-project.interop/focus!","re-frame-project.interop/get-element-by-id!","id","js/document.getElementById","re-frame-project.interop/query-selector!","selector","js/document.querySelector","re-frame-project.interop/parse-int","value","js/parseInt","re-frame-project.interop/get-attribute","attribute-name","re-frame-project.interop/prevent-default!","e","re-frame-project.interop/e->checked","re-frame-project.interop/e->value","re-frame-project.interop/sqrt","js/Math.sqrt","re-frame-project.interop/p-mark","name","js/performance.mark","re-frame-project.interop/p-measure","startMark","endMark","js/performance.measure","re-frame-project.interop/p-get-entries","js/performance.getEntries","re-frame-project.interop/p-get-entry-by-name","js/performance.getEntriesByName","re-frame-project.interop/p-entry-type","re-frame-project.interop/p-entry-json","entry","re-frame-project.interop/clear-marks","js/performance.clearMarks","re-frame-project.interop/clear-measures","js/performance.clearMeasures","re-frame-project.interop/get-all-perf","type","js/performance.getEntriesByType","cljs.core.map.cljs$core$IFn$_invoke$arity$2","re-frame-project.interop/get-all-perf-names","re-frame-project.interop/get-all-perf-durations","re-frame-project.interop/get-last-perf-duration","cljs.core/last","re-frame-project.interop/get-last-mark-name","re-frame-project.interop/get-last-measurement","re-frame-project.interop/print-all-perf","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","re-frame-project.interop/print-last-perf","last-measure","start-time","duration"],"sourcesContent":["(ns re-frame-project.interop)\n\n(defn scroll-into-view!\n  [element]\n  (.scrollIntoView element))\n\n(defn scroll-to!\n  [x y]\n  (js/window.scrollTo x y))\n\n(defn scroll-y! []\n  (.-scrollY js/window))\n\n(defn get-bounding-client-rect!\n  [element]\n  (let [bounding-client-rect (.getBoundingClientRect element)]\n    {:top (.-top bounding-client-rect)}))\n\n(defn focus!\n  [element]\n  (.focus element))\n\n(defn get-element-by-id!\n  [id]\n  (js/document.getElementById id))\n\n(defn query-selector!\n  [selector]\n  (js/document.querySelector selector))\n\n(defn parse-int\n  [value]\n  (js/parseInt value))\n\n(defn get-attribute\n  [element attribute-name]\n  (.getAttribute element attribute-name))\n\n\n\n(defn prevent-default!\n  [e]\n  (.preventDefault e))\n\n(defn e->checked\n  [e]\n  (-> (.-target e)\n      (.-checked)))\n\n(defn e->value\n  [e]\n  (-> (.-target e)\n      (.-value)))\n\n(defn sqrt\n  [value]\n  (js/Math.sqrt value))\n\n\n;PerformanceMark stuff\n\n(defn p-mark\n  [name]\n  (js/performance.mark name))\n\n(defn p-measure\n  [name startMark endMark]\n  (js/performance.measure name startMark endMark))\n\n(defn p-get-entries\n  []\n  (js/performance.getEntries))\n\n(defn p-get-entry-by-name\n  [name]\n  (js/performance.getEntriesByName name))\n\n(defn p-entry-type\n  [name]\n  (.entryType name))\n\n(defn p-entry-json\n  [entry]\n  (.toJSON entry))\n\n(defn clear-marks\n  []\n  (js/performance.clearMarks))\n\n(defn clear-measures\n  []\n  (js/performance.clearMeasures))\n\n\n\n; Get all performanceMarks in ms\n(defn get-all-perf\n  [type]\n  (->> (js/performance.getEntriesByType type)\n       (map (fn [e] (->> e\n                         (.toJSON)\n                         ;(.-startTime)\n                         )))\n       ))\n\n(defn get-all-perf-names\n  [type]\n  (->> (js/performance.getEntriesByType type)\n       (map (fn [e] (->> e\n                         (.toJSON)\n                         (.-name)\n                         )))\n       ))\n\n(defn get-all-perf-durations\n  []\n  (->> (js/performance.getEntriesByType \"measure\")\n       (map (fn [e] (->> e\n                         (.toJSON)\n                         (.-duration)\n                         )))\n       ))\n\n(defn get-last-perf-duration\n  []\n  (last (get-all-perf-durations)))\n\n(defn get-last-mark-name\n  []\n  (->>\n    (get-all-perf-names \"mark\")\n    (last)\n    ))\n\n(defn get-last-measurement\n  []\n  (->>\n    (get-all-perf \"measure\")\n    (last)\n    ))\n\n(defn print-all-perf\n  [type]\n  (println (get-all-perf type)))\n\n(defn print-last-perf\n  [type]\n  (let [last-measure (last (get-all-perf type))\n        name (.-name last-measure)\n        start-time (.-startTime last-measure)\n        duration (.-duration last-measure)]\n    (println (str \"Action name: \" name \", Start time: \" start-time \", Duration: \" duration))\n    )\n  )"]}