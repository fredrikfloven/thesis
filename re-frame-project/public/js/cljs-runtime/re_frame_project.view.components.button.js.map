{"version":3,"sources":["re_frame_project/view/components/button.cljs"],"mappings":";;;;AAIA,AAAA,AAAMA,AACHC;AADH,AAEE,AAAAC,AAAOQ;AAAPP,AAASF;AAAT,AAAA,AAAA,AAAAG,AAAA;AAAAC,AAAAF;AAAA,AAAA,AAAAD,AAAAA,AAAAE,AAAAC,AAAAH,AAAAE,AAAAC;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGgCM,AAMAC,AACAC,AAEAA;;AAZhC,AAAA,AAAAP,AAAA;AAAAC,AAAAJ;AAAA,AAAA,AAAAD,AAAAA,AAAAI,AAAAC,AAAAL,AAAAI,AAAAC;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAegCI,AAMAG,AACAC,AAEAC;;AAxBhC,AAAA,AAAAR,AAAA;AAAAC,AAAAN;AAAA,AAAA,AAAAD,AAAAA,AAAAM,AAAAC,AAAAP,AAAAM,AAAAC;;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AA0B6BO,AAEAL,AAMAE;;AAlC7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAsCqBG,AAEAL,AAMAE;;;;;AAEvB,AAAA,AAAAI,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACIM;AADJ,AAAAF,AAAAJ,AAAA,AACiBO;AADjB,AAAAH,AAAAJ,AAAA,AACoCQ;AADpC,AAAAJ,AAAAJ,AAAA,AAC+CjB;AAD/C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEsB,AAAA,AAAIyB,AAAKA,AACN,AAAC1B,AAAUC,AACRwB,AAAUD","names":["re-frame-project.view.components.button/get-style","button-type","pred__39609","expr__39610","G__39612","G__39613","G__39614","G__39615","G__39616","G__39617","cljs.core/=","re-frame-project.view.style/font","re-frame-project.view.style/transparent","re-frame-project.view.style/navy","re-frame-project.view.style/darker-red","re-frame-project.view.style/darkest-red","re-frame-project.view.style/white","p__39618","map__39619","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","re-frame-project.view.components.button/button","label","on-click","type"],"sourcesContent":["(ns re-frame-project.view.components.button\n  (:require [reagent.core :as reagent]\n            [re-frame-project.view.style :as style]))\n\n(defn get-style\n  [button-type]\n  (condp = button-type\n    :secondary {:border-width     \"2px\"\n                :cursor           \"pointer\"\n                :font-family      style/font\n                :font-weight      \"bold\"\n                :font-size        \"1.125rem\"\n                :line-height      \"1.5rem\"\n                :padding          \"4px 13px 4px 13px\"\n                :transition       \"all 200ms\"\n                :background-color style/transparent\n                :border-color     style/navy\n                :box-shadow       \"none\"\n                :color            style/navy}\n    :warning {:border-width     \"2px\"\n                :cursor           \"pointer\"\n                :font-family      style/font\n                :font-weight      \"bold\"\n                :font-size        \"1.125rem\"\n                :line-height      \"1.5rem\"\n                :padding          \"4px 13px 4px 13px\"\n                :transition       \"all 200ms\"\n                :background-color style/darker-red\n                :border-color     style/darkest-red\n                :box-shadow       \"none\"\n                :color            style/white}\n    :filled {:width \"100%\"\n             :color            style/white\n             :cursor           \"pointer\"\n             :font-family      style/font\n             :font-weight      \"bold\"\n             :font-size        \"1.125rem\"\n             :line-height      \"1.5rem\"\n             :padding          \"6px 13px 6px 13px\"\n             :transition       \"all 200ms\"\n             :background-color style/navy\n             }\n    ; default to primary button\n    {\n     :color            style/white\n     :cursor           \"pointer\"\n     :font-family      style/font\n     :font-weight      \"bold\"\n     :font-size        \"1.125rem\"\n     :line-height      \"1.5rem\"\n     :padding          \"6px 13px 6px 13px\"\n     :transition       \"all 200ms\"\n     :background-color style/navy}))\n\n(defn button \n  [{label :label on-click :on-click type :type button-type :button-type}]\n      [:button {:type (if type type \"button\")\n                  :style (get-style button-type)\n                  :on-click on-click} label])\n\n"]}